<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="board">

	<!-- sql 태그 : 다른 query에 포함시킬 수 있는 조각 -->
	<!-- jstl의 choose문과 문법 동일 -->
	<sql id="search">
		<choose>
			<when test="search_option == 'all'">
				where b.writer = m.userid
					and `show`='Y'
					and (name like #{keyword} or title like #{keyword} or content like #{keyword})
			</when>
			<otherwise>
				where b.writer = m.userid
					and `show`='Y'
					and ${search_option} like #{keyword}
			</otherwise>
		</choose>
	</sql>
	
	<!-- 페이지 나누기 쿼리 앞뒤 -->
	<sql id = "paging_header">
		SELECT R.*
			from (
				SELECT @rownum:=@rownum+1 AS rn, A.*
					from (
	</sql>
	<sql id = "paging_footer">
						 	) A, (SELECT @rownum:=0) N
		) R WHERE R.rn BETWEEN #{start} AND #{end}
	</sql>
	

	<!-- 레코드 목록조회 -->
	<select id="listAll" resultType = "com.example.spring02.model.board.dto.BoardDTO">
		<include refid="paging_header" />
			select bno, title, writer, name, regdate, viewcnt,
				(select count(*) from reply where bno = b.bno) cnt, 
				 `show`
		 	from board b, member m
		 	<include refid="search" />
		 	order by bno desc
		<include refid="paging_footer" />
	</select>
		<!-- select bno, title, writer, name, regdate, viewcnt 
		 	from board b, member m
		 	where b.writer=m.userid
		 	order by bno desc -->
		 	
		<!-- select bno, title, writer, name, regdate, viewcnt,
					(select count(*) from reply where bno = b.bno) cnt, 
				 	`show`
			 	from board b, member m
			 	where b.writer=m.userid
			 	 and `show`='Y'
			 	order by bno desc -->
	
	<!-- 레코드 추가 -->
	<insert id="insert">
		insert into board(bno,title,content,writer)
			values((select ifnull(max(bno)+1,1) from board a), #{title}, #{content}, #{writer})
	</insert>
	
	<!-- 첨부파일 정보 저장 -->
	<insert id="addAttach">
		insert into attach(fullName, bno) values (#{fullName}, (select ifnull(max(bno),1) from board a))
	</insert>
	
	<!-- 레코드 총 갯수 계산, refid:다른 tag의 id -->
	<select id="countArticle" resultType="int">
		select count(*) from board b, member m
		<include refid="search" />
	</select>
	
	<!-- 조회수 증가 처리 -->
	<update id="increaseViewcnt">
		update board set viewcnt = viewcnt+1 where bno=#{bno}
	</update>
	
	<!-- 레코드 조회 -->
	<select id="read" resultType="com.example.spring02.model.board.dto.BoardDTO">
		select bno, title, regdate, content, viewcnt, name, writer
			 from board b, member m
			 where b.writer=m.userid and bno=#{bno}
	</select>
	
	<!-- 첨부파일 목록 -->
	<!-- parameterType : 전달 매개값 타입. 생략가능 -->
	<!-- 결과값 필드는 하나, 문자열 타입 : String의 List값이 반환 (필드가 여러개인 경우, dto타입으로 리턴)-->
	<select id="getAttach" parameterType="int" resultType="String">
		select fullName from attach where bno=#{bno} order by regdate desc
	</select>
	
	<!-- 첨부파일 레코드 삭제 -->
	<delete id="deleteFile">
		delete from attach where fullName = #{fullName}
	</delete>
	
	<!-- 게시물 내용 수정 -->
	<update id="update">
		update board set title=#{title}, content=#{content} where bno=#{bno}
	</update>
	
	<!-- 새로운 첨부파일 추가 -->
	<insert id="updateAttach">
		insert into attach(fullName, bno) values(#{fullName}, #{bno})
	</insert>
	
	<!-- 게시물 레코드 삭제 -->
	<delete id="delete">
		delete from board where bno=#{bno}
	</delete>
	
	<!-- 게시물 숨김처리(삭제대신 사용) -->
	<update id="delete_record">
		update board set `show`='N' where bno=#{bno}
	</update>
	
</mapper>














